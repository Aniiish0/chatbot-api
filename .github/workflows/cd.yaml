name: CD

on:
  push:
    branches:
      - main
    paths-ignore:
      - "chore(release):*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Check if the commit message contains "chore(release):"
      - name: Check commit message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          if [[ "$COMMIT_MESSAGE" == "chore(release):"* ]]; then
            echo "Release commit detected. Skipping workflow."
            exit 0
          fi

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 5: Retrieve and bump the version number
      - name: Get current version
        id: get_version
        run: |
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
          else
            VERSION="0.0.0"
          fi
          echo "Current version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump version number
        id: bump_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ env.VERSION }}"
          patch=$((patch + 1))
          NEW_VERSION="$major.$minor.$patch"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Step 6: Write the new version back to the VERSION file
      - name: Update VERSION file
        run: |
          echo "${{ env.NEW_VERSION }}" > VERSION

      # Step 7: Commit and push the new version file (optional, if you want to store the version)
      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Actions"
          git add VERSION
          git commit -m "chore(release): Bump version to ${{ env.NEW_VERSION }}"
          git tag -a "v${{ env.NEW_VERSION }}" -m "Release"
          git push --follow-tags origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: github.ref == 'refs/heads/main'

      # Step 8: Build and push the Docker image with the new version tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            subrat1729/knowledgebase-chatbot:${{ env.NEW_VERSION }}
            subrat1729/knowledgebase-chatbot:latest

      # Step 9: Verify the Docker image is successfully pushed
      - name: Verify image pushed
        run: |
          echo "Docker image pushed to Docker Hub with version ${{ env.NEW_VERSION }}"